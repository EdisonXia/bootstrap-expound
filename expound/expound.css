/**
 * 解释Bootstrap v3.3.0 css样式源码
 * author: edison;
 * date: 2016-10-26;
 */

 /*! normalize.css v3.0.2 | MIT License | git.io/normalize */
html{
	font-family: sans-serif;
	-webkit-text-size-adjust: 100%;
	-ms-text-size-adjust: 100%;/*  -webkit-text-size-adjust: 100%; 解决的是chrome
	等以webkit为内核的浏览器下不支持小于12px的问题，在chrome下，缩小网页，
	其他元素缩小，但是字体大小不变的问题。   -ms-text-size-adjust: 100%;；
	解决IE的字体调整问题。 */
}
body{
	margin: 0;/*margin控制元素外框与包含该元素的容器边框距离。marign:0;让网页顶部顶到
	浏览器顶部，（不加margin:0；情况下默认有一段空白）
	 */
}
article, /*html5标签，用来定义外部的内容*/
aside, /*html5标签，用来定义article以外的内容，(提示:)可做文章侧栏*/
details, /*html5标签，用于描述文档或文档某个细节*/
figcaption, /*html5标签，用作文档中插图的图像，带有一个标题*/
figure, /*html5标签，用于文档中插图的图像*/
footer, /*html5标签，定义文档或节的页脚，通常包括文档的版权信息、联系信息等等
，可用于底部导航栏*/
header, /*html5标签，定义文档的页眉，可用于头部导航*/
hgroup, /*html5标签，用于对网页或区段（section）的标题进行组合*/
main, /*html5标签，规定文档的主要内容。（提示：）在一个文档中，不能出现一个以上的
main元素。main元素不能是以下元素的子元素<article>、<aside>、<footer>、<header> 或 <nav>。*/
menu, /*html5标签,目前所有浏览器都不支持此标签。但是可以使用*/
nav, /*html5标签，定义导航链接的部分，可用来制作头部导航*/
section, /*html5标签，定义文档中的节（区段）*/
summary/*标签包含 details 元素的标题，"details" 元素用于描述有关文档或文档片段的详细信息*/
{
	display: block; /* 让以上标签以块元素显示，现代高级浏览器可识别以上标签是块元素，
由于部分浏览器不识别html5标签，不知道怎样把上面这些元素显示成块元素，所以会把它们挤到一起
。为了让所用的浏览器都能显示成块元素，这里因此写上display: block 。*/
}
audio, /*html5标签，定义声音，比如音乐或其他音频流*/
canvas, /*html5标签，标签定义图形，比如图表和其他图像。（提示：标签只是图形容器，您必须使用脚本来绘制图形。）*/
progress, /*html5标签，定义运行中的进度（进程）。（提示：可以使用 <progress> 标签来显示 JavaScript 中耗费时间的函数的进度。）*/
video /*html5标签，标签定义视频，比如电影片段或其他视频流。 */
{
	display: inline-block; /* 设置音频，视频，进度条的默认显示样式为内嵌块 */
	vertical-align: baseline; /* 垂直对齐的方式为相对于父元素的基线对齐 */
}
audio:not([controls]) /* 设置audio标签，匹配所有没有controls属性的audio */
{ 
	display: none;	/* 防止现代浏览器显示没有控制条的音频 */
	height: 0; /* 在IOS5设备中移除多余的高度 */
}
[hidden], /* 匹配所有带有hidden的属性元素 */
template /* 模板标签 */
{
	display: none;
	/* 设置template标签为不显示 */
}
a
{
	background-color: transparent; 
	/* 设置背景颜色为透明 */
}
a:active,
a:hover
{
	outline: 0;
	/* outline（轮廓）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用 
	，设置为0，则表示不显示轮廓*/
}
abbr[title] /* 该标签指示简称或缩写,匹配所有带有title属性的abbr标签 */
{
	border-bottom: 1px dotted; 
	/* 设置下边框为1个像素和虚线 */
}
b,
strong
{
	font-weight: bold;
	/* 设置b,strong两个标签的字体为粗体 */
}
dfn /* 该标签标记那些对特殊术语或短语的定义 */
{
	font-style: italic; 
	/* 设置该标签的字体为斜体 */
}
h1
{
	margin: .67em 0; /* 设置外边距的上下边距为0.67em，左右边距为0 */
	font-size: 2em; /* 设置字体大小为2em */
}
mark /* html5标签，定义带有记号的文本 */
{
	color: #000;
	background: #ff0;
}
small /* html5标签，将旁注呈现为小型文本*/
{
	font-size: 80%;
}
sub, /* html5标签，为下标签 */
sup  /* html5标签，为上标签 */
{
	position: relative;	/*sub,sup位置为下标，故此用position进行定位*/
	font-size: 75%; 
	line-height: 0; /* sub,sup会轻微的增大行高，line-height: 0 设置为了不影响整体行高*/
	vertical-align: baseline;
}
sup
{
	top: -.5em;	/* 设置上标签的位置 */
}
sub{
	bottom: -.25em;	/* 设置下标签的位置 */
}
img{
	border: 0;	/* 设置图片的边框为0像素 */
}
svg:not(:root) /* svg标签表示可缩放矢量图形,。本行语义是选择不是根元素的元素 */
{
	overflow: hidden;
}
figure /* 用作文档中插图的图像 */
{
	margin: 1em 40px;
}
hr  /*标签在 HTML 页面中创建一条水平线。水平分隔线（horizontal rule）可以在视觉上将文档分隔成各个部分。[---来自W3School官方定义] */
{
	height: 0;
	-webkit-box-sizing: content-box; 
	/* box-sizing属性允许以特定的方式定义匹配某个区域的特定元素 。例如，假如您需要并排放置两个带边框的框，
	可通过将 box-sizing 设置为 "border-box"。这可令浏览器呈现出带有指定宽度和高度的框，并把边框和内边距放入框中。*/
		-moz-box-sizing: content-box;
		/* box-sizing: content-box  语义为： 宽度和高度分别应用到元素的内容框。在宽度和高度之外绘制元素的内边距和边框。 */
			box-sizing: content-box;
}
pre /* pre 元素可定义预格式化的文本。被包围在 pre 元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。 */
{
	overflow: hidden;
}
code,	/* 用于表示计算机源代码或者其他机器可以阅读的文本内容。 */
kbd,	/* 定义键盘文本。经常用在于计算机相关的文档和手册中 */
pre,	/* pre 元素可定义预格式化的文本。被包围在 pre 元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。 */
samp   /* 标签表示一段用户应该对其没有什么其他解释的文本字符。要从正常的上下文抽取这些字符时，通常要用到这个标签。 */
{
	font-family: monospace, monospace;
	font-size: 1em;
}
button,
input,
optgroup, /* 定义选项组，把相关的选项组合在一起 */
select,
textarea
{
	margin: 0;
	font: inherit; /* 字体样式继承父元素 */
	color: inherit; /*颜色继承父元素*/
}
button
{
	overflow: visible; /* 默认值。内容不会被修剪，会呈现在元素框之外 */
}
button,
select
{
	text-transform: none; /* 控制文本的大小写,none表示默认值，定义带有小写字母和大写子母的标准文本 */
}
button,
html input[type="button"],   /* 选择带有属性type="button"的input标签 */
input[type="reset"],
input[type="submit"]
{
	-webkit-appearance: button; 
	/* appearance 属性允许使元素看上去像标准的用户界面元素。所有主流浏览器都不支持 appearance 属性。
      Firefox 支持替代的 -moz-appearance 属性。Safari 和 Chrome 支持替代的 -webkit-appearance 属性。
	cursor: pointer; cursor 属性规定要显示的光标的类型（形状）。 */
}
button[disabled],
html input[disabled] /* 选择带有disabled属性的 input标签 */
{
	cursor: default; 
}
button::-moz-focus-inner, /* 火狐浏览器私有属性，用来改变button和input样式。在火狐浏览器上，button和input会有一条虚线框，此私有属性专门解决此问题 */
input::-moz-focus-inner
{
	padding: 0;
	border: 0;
}
input
{
	line-height: normal;
}
input[type="checkbox"], /* 选择带有check属性的input标签 */
input[type="radio"] 
{
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
			/* 为元素设定的宽度和高度决定了元素的边框盒。就是说，为元素指定的任何内边距和边框都将在已设定的宽度和高度内进行绘制。通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度。 */
	padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outher-spin-button
{
	height: 0;
}
input[type="search"] 
{
	-webkit-box-sizing: content-box;
	   -moz-box-sizing: content-box;
	        box-sizing: content-box;
	-webkit-appearance: textfield;   /* appearance 属性允许您使元素看上去像标准的用户界面元素。-webkit-appearance: textfield 将元素呈现为输入字段。 */
	/* 所有主流浏览器都不支持 appearance 属性。
      Firefox 支持替代的 -moz-appearance 属性。Safari 和 Chrome 支持替代的 -webkit-appearance 属性。
	cursor: pointer; cursor 属性规定要显示的光标的类型（形状）。 */
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration
{
	-webkit-appearance: none;
}
fieldset /*  该标签将表单内容的一部分打包，生成一组相关表单的字段。当一组表单元素放到 <fieldset> 标签内时，浏览器会以特殊方式来显示它们，它们可能有特殊的边界、3D 效果，或者甚至可创建一个子表单来处理这些元素。 */
{
	padding: .35em .625em .75em;
	margin: 0 2px;
	border: 1px solid #c0c0c0; /* 对fieldset标签进行默认样式 */
}
legend /* 该标签为fieldset元素定义标题 */
{
  padding: 0;
  border: 0;
}
textarea 
{
  overflow: auto;
}
optgroup 
{
  font-weight: bold;
}
table 
{
  border-spacing: 0; /* border-spacing 属性设置相邻单元格的边框间的距离（仅用于“边框分离”模式）。 */
  border-collapse: collapse;
}
td,
th 
{
  padding: 0;
}
/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */

@media print /* 使用“media”来指定特定的媒体类型，print表示在打印的时候引入里面的样式 */
{
	*,
	*:before,
	*:after 
	{
		color: #000 !important;
		text-shadow: none !important;
		background: transparent !important;
		-webkit-box-shadow: none !important;
		        box-shadow: none !important;
	}
	a,
	a:visited
	{
		text-decoration: underline;
	}
	a[href]:after
	{
		content: " (" attr(href) ")";
	}
	abbr[title]:after
	{
		content: " (" attr(title) ")";
	}
	a[href^="#"]:after,
	a[href^="javascript:"]:after
	{
		content: "";
	}
	pre,
	blockquote
	{
		border: 1px solid #999;
		page-break-inside: avoid;
	}
	thead
	{
		display: table-header-group;
	}
	tr,
	img
	{
		page-break-after: avoid;
	}
	img
	{
		max-width: 100% !important;
	}
}




















